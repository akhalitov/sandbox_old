#!/bin/bash

set -x;
if [ $# -eq 0 ]; then
    echo "No arguments"
    exit 0
fi


function pau_restart() {
	prlctl exec ve-${SandboxID}-14 "systemctl stop pa-agent && systemctl stop pau"
	sleep 30
	prlctl exec ve-${SandboxID}-14 "pkill -9 java"
        prlctl exec ve-${SandboxID}-14 "pkill -9 pa-watchdog"
        prlctl exec ve-${SandboxID}-14 "pkill -9 pa-agent"
	prlctl exec ve-${SandboxID}-14 "systemctl start pau"
	
	prlctl exec ve-${SandboxID}-14 "systemctl status pau"
	sleep 120
	prlctl exec ve-${SandboxID}-14 "systemctl start	pa-agent"
	if [ $? -ne 0 ]; then
		sleep 60
		prlctl exec ve-${SandboxID}-14 "systemctl start pa-agent"
		if [ $? -ne 0 ]; then
			exit 0
		fi
	fi
}


SandboxID=`printf "%02d" $1`

HostName=`hostname`
HWHOST='-2'${HostName: -1}
SubscriptionID=`date +"%y"``date +"%m"``date +"%d"`${HostName: -1}$101
echo $SubscriptionID
DNS='cp-'$HWHOST'-'$SandboxID
RESELLERDNS='reseller'$HWHOST'-'$SandboxID
BRAND_URL='cp'$HWHOST'-'$SandboxID'.learn-cloudblue.com'
ADMINPASS='StrongPWD!@#'
BRANDID='5'
PROXY_URL='https://'$BRAND_URL':6308'



if [ -e "/root/sandbox/status/$SandboxID" ];then


        sed -i 's/^\(status\s*=\s*\).*$/\1init/' /root/sandbox/status/$SandboxID

        TemplateName=`awk '/^template/{print $NF}' /root/sandbox/status/${SandboxID}`
	prlctl exec jumper-${SandboxID} echo ok
#	if [ $? -ne 0 ]; then exit 0 fi
        prlctl exec jumper-${SandboxID} "systemctl stop ntpdate"
#	if [ $? -ne 0 ]; then exit 0 fi
        prlctl exec jumper-${SandboxID} "ntpdate -s 0.de.pool.ntp.org"
#	if [ $? -ne 0 ]; then exit 0 fi
        prlctl exec jumper-${SandboxID} "systemctl start ntpdate"
#	if [ $? -ne 0 ]; then exit 0 fi

        UserPassword=`awk '/^password/{print $NF}' /root/sandbox/status/${SandboxID}`
        prlctl set jumper-${SandboxID} --userpasswd lab:$UserPassword
#	if [ $? -ne 0 ]; then exit 0 fi
        prlctl exec jumper-${SandboxID} "ip r a 10.96.0.0/12 via 10.111.22.23 dev eth1"
        prlctl exec jumper-${SandboxID} "ip r a 10.244.0.0/16 via 10.111.22.23 dev eth1"
        prlctl exec jumper-${SandboxID} "if grep -P '^search' /etc/resolv.conf; then sed -i 's/^search.*/& default.svc.cluster.local/' /etc/resolv.conf; else sed -i '1s/^/search default.svc.cluster.local\n/' /etc/resolv.conf; fi"


	prlctl exec jumper-${SandboxID} "systemctl start tinyproxy"


	prlctl exec ve-${SandboxID}-14 echo ok
#	if [ $? -ne 0 ]; then exit 0 fi
	prlctl exec ve-${SandboxID}-14 "systemctl stop ntpdate"
#	if [ $? -ne 0 ]; then exit 0 fi
	prlctl exec ve-${SandboxID}-14 "ntpdate -s 0.de.pool.ntp.org"
#	if [ $? -ne 0 ]; then exit 0 fi
	prlctl exec ve-${SandboxID}-14 "systemctl start ntpdate"
#	if [ $? -ne 0 ]; then exit 0 fi

	Sandbox_IP=`awk '/^ip/{print $NF}' /root/sandbox/status/${SandboxID}`
	Sandbox_IP_Formatted=$(printf '%03d.%03d.%03d.%03d'  ${Sandbox_IP//./ })
	
	# Makes sense to wait when services are started via checking port 8080
	prlctl exec ve-${SandboxID}-14  sudo -u postgres psql oss  -c "update configured_ips set ip_address=\'${Sandbox_IP_Formatted}\' where ip_id = 3"
	prlctl exec ve-${SandboxID}-14  sudo -u postgres psql oss  -c "update confman_parameters set value=\'${PROXY_URL}\' where name=\'APS_PROXY_IN_URL\'"
	
	prlctl exec ve-${SandboxID}-12 sh /root/script.sh $SubscriptionID

	pau_restart

        prlctl exec ve-${SandboxID}-14 "python /scripts/uploadkey"
#	if [ $? -ne 0 ]; then exit 0 fi
	prlctl exec ve-${SandboxID}-14 "ip r a 10.96.0.0/12 via 10.111.22.23 dev eth0"
	prlctl exec ve-${SandboxID}-14 "ip r a 10.244.0.0/16 via 10.111.22.23 dev eth0"	
	prlctl exec ve-${SandboxID}-14 "if grep -P '^search' /etc/resolv.conf; then sed -i 's/^search.*/& default.svc.cluster.local/' /etc/resolv.conf; else sed -i '1s/^/search default.svc.cluster.local\n/' /etc/resolv.conf; fi"

        prlctl exec ve-${SandboxID}-23 echo ok
        prlctl exec ve-${SandboxID}-23 "systemctl stop ntpdate"
        prlctl exec ve-${SandboxID}-23 "ntpdate -s 0.de.pool.ntp.org"
        prlctl exec ve-${SandboxID}-23 "systemctl start ntpdate"

        prlctl exec ve-${SandboxID}-33 echo ok
        prlctl exec ve-${SandboxID}-33 "systemctl stop ntpdate"
        prlctl exec ve-${SandboxID}-33 "ntpdate -s 0.de.pool.ntp.org"
        prlctl exec ve-${SandboxID}-33 "systemctl start ntpdate"
        prlctl set ve-${SandboxID}-33 --ipfilter no --macfilter no --preventpromisc no
        prlctl exec ve-${SandboxID}-33 'brctl addif br0 eth0'
        prlctl exec ve-${SandboxID}-33 'ip r d 10.111.22.0/24 dev eth0'
        prlctl exec ve-${SandboxID}-33 'ip r d 10.111.22.1 dev eth0'
		
	prlctl exec ve-${SandboxID}-34 echo ok
        prlctl exec ve-${SandboxID}-34 "systemctl stop ntpdate"
        prlctl exec ve-${SandboxID}-34 "ntpdate -s 0.de.pool.ntp.org"
        prlctl exec ve-${SandboxID}-34 "systemctl start ntpdate"
        prlctl set ve-${SandboxID}-34 --ipfilter no --macfilter no --preventpromisc no
        prlctl exec ve-${SandboxID}-34 'brctl addif br0 eth0'
        prlctl exec ve-${SandboxID}-34 'ip r d 10.111.22.0/24 dev eth0'
        prlctl exec ve-${SandboxID}-34 'ip r d 10.111.22.1 dev eth0'
		
	prlctl exec ve-${SandboxID}-35 echo ok
        prlctl exec ve-${SandboxID}-35 "systemctl stop ntpdate"
        prlctl exec ve-${SandboxID}-35 "ntpdate -s 0.de.pool.ntp.org"
        prlctl exec ve-${SandboxID}-35 "systemctl start ntpdate"
        prlctl set ve-${SandboxID}-35 --ipfilter no --macfilter no --preventpromisc no
        prlctl exec ve-${SandboxID}-35 'brctl addif br0 eth0'
        prlctl exec ve-${SandboxID}-35 'ip r d 10.111.22.0/24 dev eth0'
        prlctl exec ve-${SandboxID}-35 'ip r d 10.111.22.1 dev eth0'

        prlctl exec ve-${SandboxID}-19 "cscript" "c:\Windows\system32\slmgr.vbs" "-rearm"
        prlctl restart ve-${SandboxID}-19


	api1='<?xml version="1.0"?><methodCall><methodName>pem.addDomainToAccount</methodName><params><param><value><struct><member><name>account_id</name><value><i4>1</i4></value></member><member><name>domain_name</name><value><string>'$BRAND_URL'</string></value></member></struct></value></param></params></methodCall>'

        api2='<?xml version="1.0"?><methodCall><methodName>pem.brandDomain</methodName><params><param><value><struct><member><name>domain_name</name><value><string>'$BRAND_URL'</string></value></member><member><name>ip_type</name><value><string>shared</string></value></member></struct></value></param></params></methodCall>'

        api3='<?xml version="1.0"?><methodCall><methodName>pem.setDefaultBrand</methodName><params><param><value><struct><member><name>brand_id</name><value><i4>'$BRANDID'</i4></value></member></struct></value></param></params></methodCall>'

        api4='<?xml version="1.0"?><methodCall><methodName>pem.billing.publishOnlineStore</methodName><params><param><value><struct><member><name>account_id</name><value><i4>1</i4></value></member><member><name>brand_id</name><value><i4>'$BRANDID'</i4></value></member><member><name>store_id</name><value><i4>1</i4></value></member><member><name>url_suffix</name><value><string>store</string></value></member></struct></value></param></params></methodCall>'

        prlctl exec ve-${SandboxID}-14 "curl -d '${api1}' http://10.111.22.14:8440"

        prlctl exec ve-${SandboxID}-14 "curl -d '${api2}' http://10.111.22.14:8440"

        sleep 15
        prlctl exec ve-${SandboxID}-14 "curl -d '${api3}' http://10.111.22.14:8440"

        prlctl exec ve-${SandboxID}-14 "curl -d '${api4}' http://10.111.22.14:8440"

        api5='<?xml version="1.0"?><methodCall><methodName>pem.setMemberPassword</methodName><params><param><value><struct><member><name>login</name><value><string>admin</string></value></member><member><name>password</name><value><string>'$UserPassword'</string></value></member></struct></value></param></params></methodCall>'

        prlctl exec ve-${SandboxID}-14 "curl -d '${api5}' http://10.111.22.14:8440"

        prlctl exec jumper-${SandboxID} "/root/certbot-auto --nginx certonly -d ${BRAND_URL}"
#       if [ $? -ne 0 ]; then exit 0 fi
        prlctl exec jumper-${SandboxID} "rm -rf /etc/nginx/cert.pem"
        prlctl exec jumper-${SandboxID} "rm -rf /etc/nginx/cert.key"
        prlctl exec jumper-${SandboxID} "cp /etc/letsencrypt/live/${BRAND_URL}/fullchain.pem /etc/nginx/cert.pem"
        prlctl exec jumper-${SandboxID} "cp /etc/letsencrypt/live/${BRAND_URL}/privkey.pem /etc/nginx/cert.key"
        prlctl exec jumper-${SandboxID} "systemctl restart nginx"
#       if [ $? -ne 0 ]; then exit 0 fi





CERT=`prlctl exec jumper-${SandboxID} cat /etc/nginx/cert.pem`
CERT_KEY=`prlctl exec jumper-${SandboxID} cat /etc/nginx/cert.key`

	api6='<?xml version="1.0"?><methodCall><methodName>pem.importBrandCertificate</methodName><params><param><value><struct><member><name>brand_id</name><value><i4>'$BRANDID'</i4></value></member><member><name>cert</name><value><string>'$CERT'</string></value></member><member><name>key</name><value><string>'$CERT_KEY'</string></value></member></struct></value></param></params></methodCall>'

	prlctl exec jumper-${SandboxID} "curl -d '${api6}' http://10.111.22.14:8440"

        sed -i 's/^\(status\s*=\s*\).*$/\1ok/' /root/sandbox/status/$SandboxID

else
        echo "cannot find sandbox status file /root/sandbox/status/$SandboxID"
        fi

set +x;
